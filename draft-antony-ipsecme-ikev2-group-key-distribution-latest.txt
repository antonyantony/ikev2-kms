



IP Security Maintenance and Extensions                         A. Antony
Internet-Draft                                               S. Klassert
Intended status: Standards Track                                 secunet
Expires: 11 April 2026                                    8 October 2025


                 IKEv2 Scalable Group Key Distribution
          draft-antony-ipsecme-ikev2-group-key-distribution-01

Abstract

   This document specifies method for IPsec key derivation and
   distribution within large groups using an extended Internet Key
   Exchange Protocol Version 2 (IKEv2).  A Group Key Management Server
   (GKMS) provisions both a shared group key and proxy messages between
   nodes to derive pairwise keys pair unique to IPsec peers, enabling
   use of IPsec Encapsulating Security Payload (ESP) among multiple
   nodes.  Each communicating pair derives a session-specific encryption
   key from two inputs: the group key provided by the GKMS and an
   individual host-pair keys derived via IKEv2 exchange.  The final key
   is derived by combining, XOR, these components, ensuring uniqueness
   per pair keys only known to the IPsec peers while maintaining fewer
   IKEv2 states on nodes, scalable state management for dynamic group
   membership.  Node authentication is performed under the authority of
   the GKMS.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 11 April 2026.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.




Antony & Klassert         Expires 11 April 2026                 [Page 1]

Internet-Draft           IKEv2 Key Distribution             October 2025


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Requirements Language . . . . . . . . . . . . . . . . . . . .   3
   3.  Usecase . . . . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.1.  Notes . . . . . . . . . . . . . . . . . . . . . . . . . .   4
     3.2.  Limitations of Full Mesh IKE Keying . . . . . . . . . . .   4
   4.  DH or Key Exchange to Derive Keys . . . . . . . . . . . . . .   5
   5.  Symetric key wrapped in node Public Key . . . . . . . . . . .   5
   6.  Group Key Management Server . . . . . . . . . . . . . . . . .   5
     6.1.  Group Key . . . . . . . . . . . . . . . . . . . . . . . .   5
     6.2.  Remove group members  . . . . . . . . . . . . . . . . . .   6
     6.3.  Rekey . . . . . . . . . . . . . . . . . . . . . . . . . .   6
     6.4.  Adding a new member:  . . . . . . . . . . . . . . . . . .   6
     6.5.  GKMS Redundancy . . . . . . . . . . . . . . . . . . . . .   6
   7.  Node  . . . . . . . . . . . . . . . . . . . . . . . . . . . .   6
     7.1.  Memory estimations  . . . . . . . . . . . . . . . . . . .   6
     7.2.  Scaling of messages . . . . . . . . . . . . . . . . . . .   6
   8.  Operational Considerations  . . . . . . . . . . . . . . . . .   6
   9.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   7
   10. Security Considerations . . . . . . . . . . . . . . . . . . .   7
   11. Normative References  . . . . . . . . . . . . . . . . . . . .   7
   12. Informative References  . . . . . . . . . . . . . . . . . . .   7
   Appendix A.  Additional Stuff . . . . . . . . . . . . . . . . . .   8
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Introduction

   Modern distributed environments operating under a single
   administrative domain, such as AI or machine learning (ML) clusters,
   often comprise a large number of worker nodes that exchange sensitive
   data over IP networks.  To ensure confidentiality and integrity of
   these communications, the IPsec Encapsulating Security Payload (ESP),
   [RFC4303], can be employed.

   In this architecture, a Group Key Management Server (GKMS) functions
   as a trusted authority responsible for authenticating participating
   nodes and facilitating the derivation of cryptographic material



Antony & Klassert         Expires 11 April 2026                 [Page 2]

Internet-Draft           IKEv2 Key Distribution             October 2025


   within the group.  Each node enrolls with the GKMS to obtain
   credentials and authorization for secure participation in the group
   communication framework.

   Each pair of nodes within the group MUST derive and use a unique
   pairwise encryption key for ESP sessions.  These keys are generated
   via an asymmetric derivation process coordinated by the GKMS,
   enabling controlled key distribution without requiring direct peer-
   to-peer IKE exchanges among all nodes.  This method provides a
   scalable and efficient key management model that supports large,
   dynamic AI/ML clusters, while only communication pairs has the
   encryption keys.

   The final ESP session key is derived from the current Group Key,
   generated by the GKMS and shared with the current group members, per
   session derived key.

1.1.  Terminology

   This document uses the following terms defined in [RFC4301]:
   Encapsulating Security Payload (ESP), Security Association (SA),
   Security Policy Database (SPD).

2.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174]when, and only when, they appear in all
   capitals, as shown here.

3.  Usecase

   A single administrative domain may consist of multiple nodes that
   need to communicate securely among themselves.  The method described
   in [I-D.xia-ipsecme-eesp-stateless-encryption] proposes using one
   shared encryption key across all nodes.  In contrast, this document
   defines a model in which each pair of nodes independently derives and
   uses a unique encryption key.  This approach enhances
   confidentiality, limits the scope of key compromise, and allows
   scalable group operation.










Antony & Klassert         Expires 11 April 2026                 [Page 3]

Internet-Draft           IKEv2 Key Distribution             October 2025


   Similar use cases can be found in large-scale distributed systems
   such as Google [PSP] and [Falcon], as well as [UEC-TSS], which employ
   similar concepts in the context of key derivation and key
   distribution without replicating full IKE exchanges between every
   pair of nodes.  Additionally, [I-D.ietf-ipsecme-eesp] has highlighted
   scenarios where IKE is used solely for key derivation within data
   center environments, further motivating scalable approaches to key
   management in such settings.

   We considered adapting concepts from Message Layer Security (MLS)
   [RFC9420] and Double Ratchet key update mechanisms, which ensure that
   only the communicating endpoints possess the necessary key material.
   However, these approaches introduce continuous operational overhead
   due to their frequent key updates and state evolution requirements.
   For the IPsec use case envisioned here, key derivation overhead must
   remain minimal, and once the keys are derived, there should be no
   operational need to periodically refresh the derivation material,
   except in cases of explicit rekeying or membership change events.

3.1.  Notes

   [I-D.ietf-ipsecme-g-ikev2] provides similar functionality, but is
   designed for multicast environments and requires each IPsec peer to
   exchange identity information over IKEv2.  While there are potential
   conceptual overlaps with the approach described in this document, one
   primary drawback noted by the authors is that in G-IKEv2 the Group
   Controller/Key Server (GCKS) retains all cryptographic keys in a
   single location.  This concentration of key material introduces a
   significant vulnerability, as compromise of the GCKS could expose the
   entire group’s secure communications.  G-IKEv2 use symmetric key
   wrapping I guess more than one peer has the same keys?

3.2.  Limitations of Full Mesh IKE Keying

   If each node were to establish IKE sessions directly with every other
   node in the group, it would require maintaining N−1 control-plane
   associations per participant, along with the full state required for
   IKE negotiation and cryptographic identity management, including
   certificate handling.  This approach imposes substantial operational
   and computational overhead, particularly as N grows large.  It also
   increases the complexity of the IKE software stack and does not scale
   well to large deployments, making it impractical for dynamic or high-
   density network environments.  When there is node removed from from
   the group some one has to announce that and update the group.







Antony & Klassert         Expires 11 April 2026                 [Page 4]

Internet-Draft           IKEv2 Key Distribution             October 2025


4.  DH or Key Exchange to Derive Keys

   When one node, for example Alice, wishes to communicate securely with
   another node, Bob, using IPsec and ESP over IPv4 or IPv6, Alice sends
   a request to the Group Key Management Server (GKMS).  The GKMS
   proxies the message to Bob and relays Bob’s response back to Alice.

   Nodes Alice and Bob perform a Diffie-Hellman (DH) a.k.a Key
   Exchange(KE), as defined in [RFC7296], deriving symmetric keying
   material through a suitable.  Key Derivation Function (KDF).  A
   portion of this KE material is used to ensure that the GKMS cannot
   act as a man-in-the-middle.  The resulting peer-to-peer key is long-
   lived and is combined, using an XOR operation, with the group key
   derived from the GKMS.  The resulting composite key is used for ESP
   encryption, providing both scalability and strong key separation
   properties.

5.  Symetric key wrapped in node Public Key

   An early consideration was to use a key wrapping mechanism, such as
   public key wrapping or symmetric key wrapping, as described in
   [I-D.ietf-ipsecme-g-ikev2].  At present, the preferred method is to
   employ Diffie-Hellman (DH) key exchange to derive keys securely,
   avoiding the need to transmit raw key material.  A public key signed
   could be also feasible, provided it includes strong authentication
   and verification steps.  Another candidate mechanism for evaluation
   is [RSA-KEY-WRAPING], which may offer different operational trade-
   offs.

   A node would use same key to IPsec with every other node.  The GKMS
   would cache the node key and hand out.  One disadvantages the ESP key
   is per node and not per node pair.

6.  Group Key Management Server

   This is an essential in this configuration.  This server or servers
   can authenticate each node on

6.1.  Group Key

   It is a random key generated by the GKMS and distributed to all
   current members of the group.  When GKMS remove a any members Group
   Keys must be re-generated and distributed.








Antony & Klassert         Expires 11 April 2026                 [Page 5]

Internet-Draft           IKEv2 Key Distribution             October 2025


6.2.  Remove group members

   To remove nodes, IPsec peers from a group, the GKMS would send around
   a new Group Key to the current members.  The current members MUST
   immediately derive a new key ESP key using this new Group Key. With
   the Group Key this becomes a local operations.  No need to contact
   the nodes.

6.3.  Rekey

   This operation is similar to removing members.  The GKMS send a new
   key to all nodes.  The nodes would derive new keys.

6.4.  Adding a new member:

   When adding new member the GKMS would share the current Group Key
   with the new Group member.

6.5.  GKMS Redundancy

   The GKMS service within an administrative domain may be deployed in a
   redundant configuration to enhance both scalability and availability.
   Multiple GKMS instances can operate in parallel, enabling load
   distribution and fault tolerance.  To maintain consistent
   cryptographic state across the domain, all GKMS instances MUST share
   the same set of Group Keys and associated management information.
   This ensures that any node can securely obtain or refresh keying
   material from any available GKMS without disruption to established
   security associations.

7.  Node

7.1.  Memory estimations

   Each IPsec Peer which would like to send and receive ESP would have
   save 2 * N Keys minimum, for uninterrupted messages during Rekey and
   removal group member the node would have store 4 * Keys.

7.2.  Scaling of messages

   Each pair of node need one Round Trip Time to derive keys.  While the
   IKEv2 and ESP parameters are choosen by the GKMS server.

8.  Operational Considerations

   Message scalability for large number of nodes in the group think of
   thousands to possibly millions of nodes.  Number of messages
   exchanges to derive unique key.



Antony & Klassert         Expires 11 April 2026                 [Page 6]

Internet-Draft           IKEv2 Key Distribution             October 2025


9.  Acknowledgments

   ACKs TBD

10.  Security Considerations

   TBD

11.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC4301]  Kent, S. and K. Seo, "Security Architecture for the
              Internet Protocol", RFC 4301, DOI 10.17487/RFC4301,
              December 2005, <https://www.rfc-editor.org/info/rfc4301>.

   [RFC4303]  Kent, S., "IP Encapsulating Security Payload (ESP)",
              RFC 4303, DOI 10.17487/RFC4303, December 2005,
              <https://www.rfc-editor.org/info/rfc4303>.

   [RFC7296]  Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T.
              Kivinen, "Internet Key Exchange Protocol Version 2
              (IKEv2)", STD 79, RFC 7296, DOI 10.17487/RFC7296, October
              2014, <https://www.rfc-editor.org/info/rfc7296>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

12.  Informative References

   [Falcon]   Google, "Google Falcon",
              <https://netdevconf.info/0x18/docs/netdev-0x18-paper43-
              talk-slides/
              Introduction%20to%20Falcon%20Reliable%20Transport.pdf>.

   [I-D.ietf-ipsecme-eesp]
              Klassert, S., Antony, A., and C. Hopps, "Enhanced
              Encapsulating Security Payload (EESP)", Work in Progress,
              Internet-Draft, draft-ietf-ipsecme-eesp-01, 3 July 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-ipsecme-
              eesp-01>.






Antony & Klassert         Expires 11 April 2026                 [Page 7]

Internet-Draft           IKEv2 Key Distribution             October 2025


   [I-D.ietf-ipsecme-g-ikev2]
              Smyslov, V. and B. Weis, "Group Key Management using
              IKEv2", Work in Progress, Internet-Draft, draft-ietf-
              ipsecme-g-ikev2-23, 31 July 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-ipsecme-
              g-ikev2-23>.

   [I-D.xia-ipsecme-eesp-stateless-encryption]
              Xia, L. and W. Jiang, "Stateless Encryption Scheme of
              Enhanced Encapsulating Security Payload (EESP)", Work in
              Progress, Internet-Draft, draft-xia-ipsecme-eesp-
              stateless-encryption-01, 6 July 2025,
              <https://datatracker.ietf.org/doc/html/draft-xia-ipsecme-
              eesp-stateless-encryption-01>.

   [PSP]      Google, "PSP Architecture Specification",
              <https://github.com/google/psp/blob/main/doc/
              PSP_Arch_Spec.pdf>.

   [RFC9420]  Barnes, R., Beurdouche, B., Robert, R., Millican, J.,
              Omara, E., and K. Cohn-Gordon, "The Messaging Layer
              Security (MLS) Protocol", RFC 9420, DOI 10.17487/RFC9420,
              July 2023, <https://www.rfc-editor.org/info/rfc9420>.

   [RSA-KEY-WRAPING]
              Google, "Key wrapping",
              <https://cloud.google.com/kms/docs/key-
              wrapping#rsaes_oaep_sha_1_2_aes_kwp>.

   [UEC-TSS]  Ultra Ethernet Consortium, "Ultra Ethernet Specification
              v1.0.1", <https://ultraethernet.org/wp-
              content/uploads/sites/20/2025/10/UE-Specification-
              1.0.1.pdf>.

Appendix A.  Additional Stuff

   TBD

Authors' Addresses

   Antony Antony
   secunet Security Networks AG
   Email: antony.antony@secunet.com


   Steffen Klassert
   secunet Security Networks AG
   Email: steffen.klassert@secunet.com



Antony & Klassert         Expires 11 April 2026                 [Page 8]
